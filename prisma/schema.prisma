generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String @id @unique
  name         String @default("")
  username     String @unique @default("")
  profileImage String @default("/default.png")
  passwordHash String

  // email String? @unique @default("")

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  session Session?

  createdRooms Room[] @relation("UserCreatedRooms")
  joinedRooms  Room[] @relation("UserJoinedRooms")

  messages Message[]

  lastJoinedRoom String?

  @@map("users")
}

model Session {
  id String @id @unique @default(uuid())

  userId String @unique
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)

  accessToken  String
  refreshToken String

  @@map("sessions")
}

model Room {
  id          String @id @unique @default("")
  status      String @default("open")
  topic       String @default("")
  description String @default("")
  codeContent String @default("// This is the begnning of your new playground! \nconsole.log('Hello, CodeRTC!');")

  isProtected Boolean @default(false)
  passcode    String?

  language String @default("JavaScript")
  tags     Tag[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  ownerId String
  owner   User   @relation(name: "UserCreatedRooms", fields: [ownerId], references: [id], onDelete: Cascade)

  members  User[]    @relation("UserJoinedRooms")
  messages Message[]

  @@map("rooms")
}

model Message {
  id String @id @unique @default(uuid())

  type    String @default("system")
  content String @default("")

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  roomId String
  room   Room   @relation(fields: [roomId], references: [id], onDelete: Cascade)

  authorId String
  author   User   @relation(fields: [authorId], references: [id], onDelete: Cascade)

  @@map("messages")
}

model Tag {
  id   String @id @unique @default(uuid())
  text String

  roomId String
  room   Room   @relation(fields: [roomId], references: [id], onDelete: Cascade)

  @@map("tags")
}
